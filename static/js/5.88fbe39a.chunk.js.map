{"version":3,"sources":["component/blockComponent/BlockChain/BlockChainBlock/BlockChainBlock.module.css","component/blockComponent/BlockChain/BlockChainContainer/BlockChainContainer.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","component/blockComponent/BlockChain/BlockChainBlock/BlockChainBlock.js","component/blockComponent/BlockChain/BlockChainContainer/BlockChainContainer.js","../node_modules/@material-ui/core/esm/utils/setRef.js","../node_modules/@material-ui/core/esm/TextareaAutosize/TextareaAutosize.js","../node_modules/@material-ui/core/esm/utils/useForkRef.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@material-ui/core/esm/utils/debounce.js"],"names":["module","exports","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Block","previousHash","currentHash","dataValue","Nonce","onUpdateDataValue","blockIndex","onMineClicked","useState","dirty","updateDirty","buttonLoading","updatebuttonLoading","useEffect","shaString","tempNonce","sha256","toString","slice","Card","className","Styles","Root","variant","style","marginLeft","marginRight","CardContent","Content","backgroundColor","TopDataContainer","Input","label","disabled","NumberArea","value","DataContainer","NonceArea","htmlFor","Label","TextareaAutosize","id","TextArea","onChange","e","console","log","target","rowsMin","PrevHashArea","HashArea","Button","Mine","secondary","loading","size","onClick","BlockChainContainer","heading","previousHashArr","updatePreviousHashArr","dataInArr","updateDataArr","hashArr","updateHashArr","nonceArr","updateNonceArr","pageLoading","updatePageLoading","dataValueUpdateHandler","tempDataArr","tempHashArr","tempPrevArr","i","numberOfBlocks","mineClickHandler","nonce","tempHAshArr","tempNonceArr","BlockChain","push","BlockChainBlock","key","Spinner","container","Heading","blockChainContainer","setRef","ref","current","getStyleValue","computedStyle","property","parseInt","useEnhancedEffect","window","React","styles","visibility","position","overflow","height","top","left","transform","props","refA","refB","rows","rowsMax","_props$rowsMin","rowsMinProp","other","source","excluded","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","_objectWithoutProperties","isControlled","inputRef","handleRef","refValue","shadowRef","renders","_React$useState","state","setState","syncHeight","input","getComputedStyle","inputShallow","width","placeholder","boxSizing","padding","border","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","outerHeightStyle","abs","prevState","handleResize","func","timeout","wait","arguments","undefined","debounced","_len","args","_key","that","this","later","apply","clearTimeout","setTimeout","clear","debounce","addEventListener","removeEventListener","_extends","event","readOnly","tabIndex"],"mappings":"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","file":"static/js/5.88fbe39a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Heading\":\"BlockChainBlock_Heading__-xlO3\",\"Root\":\"BlockChainBlock_Root__22IGo\",\"Content\":\"BlockChainBlock_Content__Ynk7Z\",\"TopDataContainer\":\"BlockChainBlock_TopDataContainer__3lK6X\",\"DataContainer\":\"BlockChainBlock_DataContainer__33jIy\",\"NumberArea\":\"BlockChainBlock_NumberArea__17Egs\",\"NonceArea\":\"BlockChainBlock_NonceArea__1vqqM\",\"TextArea\":\"BlockChainBlock_TextArea__3nZ6X\",\"PrevHashArea\":\"BlockChainBlock_PrevHashArea__1XUAT\",\"HashArea\":\"BlockChainBlock_HashArea__AP35b\",\"Label\":\"BlockChainBlock_Label__Wy2vj\",\"Mine\":\"BlockChainBlock_Mine__1frhl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blockChainContainer\":\"BlockChainContainer_blockChainContainer__PxNaE\",\"container\":\"BlockChainContainer_container__12HMq\",\"Heading\":\"BlockChainContainer_Heading__3O9ne\"};","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Input } from 'semantic-ui-react';\nimport { TextareaAutosize } from '@material-ui/core';\nimport { Button } from 'semantic-ui-react';\nimport sha256 from 'crypto-js/sha256';\nimport Styles from './BlockChainBlock.module.css';\n\nfunction Block({\n  previousHash,\n  currentHash,\n  dataValue,\n  Nonce,\n  onUpdateDataValue,\n  blockIndex,\n  onMineClicked,\n}) {\n  const [dirty, updateDirty] = useState(false);\n  const [buttonLoading, updatebuttonLoading] = useState(false);\n  function mineClickHandler() {\n    updatebuttonLoading(true);\n  }\n  useEffect(() => {\n    if (buttonLoading) {\n      let tempNonce = 0;\n      let shaString;\n      while (true) {\n        shaString = sha256(previousHash + dataValue + tempNonce).toString();\n        if (shaString.slice(0, 4) === '0000') {\n          break;\n        }\n        tempNonce++;\n      }\n      updatebuttonLoading(false);\n      onMineClicked(shaString, tempNonce, blockIndex);\n    }\n  }, [buttonLoading]);\n\n  useEffect(() => {\n    if (\n      currentHash &&\n      previousHash &&\n      currentHash.slice(0, 4) === '0000' &&\n      previousHash.slice(0, 4) === '0000'\n    ) {\n      updateDirty(false);\n    } else {\n      updateDirty(true);\n    }\n  }, [previousHash, currentHash]);\n\n  function dataValueChangeHandler(e) {\n    console.log(e.target.value === '');\n    onUpdateDataValue(e.target.value, blockIndex);\n  }\n\n  return (\n    <Card\n      className={Styles.Root}\n      variant='outlined'\n      style={{ marginLeft: '7px', marginRight: '7px' }}>\n      <CardContent\n        className={Styles.Content}\n        style={{ backgroundColor: dirty ? '#FFBABA' : '#90caf9' }}>\n        <div className={Styles.TopDataContainer}>\n          <Input\n            label={'Number'}\n            disabled\n            className={Styles.NumberArea}\n            value={blockIndex}\n          />\n        </div>\n        <div className={Styles.DataContainer}>\n          <Input\n            label={'Nonce'}\n            className={Styles.NonceArea}\n            disabled\n            value={Nonce}\n          />\n        </div>\n        <div className={Styles.DataContainer}>\n          <label htmlFor='textArea' className={Styles.Label}>\n            Data:\n          </label>\n          <TextareaAutosize\n            id='textArea'\n            value={dataValue}\n            className={Styles.TextArea}\n            onChange={dataValueChangeHandler}\n            rowsMin='4'\n          />\n        </div>\n        <div className={Styles.DataContainer}>\n          <Input\n            label={'Prev-Hash'}\n            disabled\n            className={Styles.PrevHashArea}\n            value={previousHash}\n          />\n        </div>\n        <div className={Styles.DataContainer}>\n          <Input\n            label={'Hash'}\n            disabled\n            className={Styles.HashArea}\n            value={currentHash}\n          />\n        </div>\n        <Button\n          className={Styles.Mine}\n          secondary\n          loading={buttonLoading}\n          size='large'\n          onClick={mineClickHandler}>\n          Mine\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Block;\n","import React, { useState, useEffect } from 'react';\nimport sha256 from 'crypto-js/sha256';\nimport BlockChainBlock from '../BlockChainBlock/BlockChainBlock';\nimport Spinner from '../../../Spinner/Spinner';\nimport Styles from './BlockChainContainer.module.css';\n\nfunction BlockChainContainer({ heading }) {\n  const [previousHashArr, updatePreviousHashArr] = useState([]);\n  const [dataInArr, updateDataArr] = useState(['', '', '', '', '', '']); //numberBlocks times\n  const [hashArr, updateHashArr] = useState([]);\n  const [nonceArr, updateNonceArr] = useState([]);\n  const [pageLoading, updatePageLoading] = useState(true);\n  const numberOfBlocks = 6;\n\n  useEffect(() => {\n    let tempPrevArr = [\n      '0000000000000000000000000000000000000000000000000000000000000000',\n    ];\n    let tempHAshArr = [];\n    let tempNonceArr = [];\n    for (let i = 0; i < numberOfBlocks; i++) {\n      let tempNonce = 0;\n      let shaString;\n      while (true) {\n        shaString = sha256(tempPrevArr[i] + tempNonce + '').toString();\n        if (shaString.slice(0, 4) === '0000') break;\n        tempNonce++;\n      }\n      tempHAshArr[i] = shaString;\n      tempNonceArr[i] = tempNonce;\n      if (numberOfBlocks - 1 !== i) {\n        tempPrevArr[i + 1] = shaString;\n      }\n    }\n    updateHashArr(tempHAshArr);\n    updateNonceArr(tempNonceArr);\n    updatePreviousHashArr(tempPrevArr);\n    updatePageLoading(false);\n  }, []);\n\n  function dataValueUpdateHandler(dataValue, blockIndex) {\n    let tempDataArr = [...dataInArr];\n    let tempHashArr = [...hashArr];\n    let tempPrevArr = [...previousHashArr];\n    tempDataArr[blockIndex] = dataValue;\n    let shaString;\n    for (let i = blockIndex; i < numberOfBlocks; i++) {\n      shaString = sha256(tempPrevArr[i] + nonceArr[i] + tempDataArr[i]);\n      shaString = shaString.toString();\n      tempHashArr[i] = shaString;\n      if (numberOfBlocks - 1 !== i) {\n        tempPrevArr[i + 1] = shaString;\n      }\n    }\n    updateDataArr(tempDataArr);\n    updateHashArr(tempHashArr);\n    updatePreviousHashArr(tempPrevArr);\n  }\n\n  function mineClickHandler(shaString, nonce, blockIndex) {\n    let tempHashArr = [...hashArr];\n    let tempNonce = [...nonceArr];\n    let tempPrevArr = [...previousHashArr];\n    tempNonce[blockIndex] = nonce;\n    tempHashArr[blockIndex] = shaString;\n    if (numberOfBlocks - 1 !== blockIndex) {\n      tempPrevArr[blockIndex + 1] = shaString;\n    }\n    for (let i = blockIndex + 1; i < numberOfBlocks; i++) {\n      shaString = sha256(`${tempPrevArr[i]}${tempNonce[i]}${dataInArr[i]}`);\n      shaString = shaString.toString();\n      tempHashArr[i] = shaString;\n      if (numberOfBlocks - 1 !== i) {\n        tempPrevArr[i + 1] = shaString;\n      }\n    }\n    updateHashArr(tempHashArr);\n    updatePreviousHashArr(tempPrevArr);\n    updateNonceArr(tempNonce);\n  }\n\n  let BlockChain = [];\n  for (let i = 0; i < numberOfBlocks; i++) {\n    BlockChain.push(\n      <BlockChainBlock\n        previousHash={previousHashArr[i]}\n        currentHash={hashArr[i]}\n        dataValue={dataInArr[i]}\n        Nonce={nonceArr[i]}\n        onUpdateDataValue={dataValueUpdateHandler}\n        blockIndex={i}\n        key={i}\n        onMineClicked={mineClickHandler}\n      />,\n    );\n  }\n  return pageLoading ? (\n    <Spinner />\n  ) : (\n    <div className={Styles.container}>\n      <h1 className={Styles.Heading}>{heading}:-</h1>\n      <div className={Styles.blockChainContainer}>{BlockChain}</div>\n    </div>\n  );\n}\n\nexport default BlockChainContainer;\n","// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\n\nfunction getStyleValue(computedStyle, property) {\n  return parseInt(computedStyle[property], 10) || 0;\n}\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar styles = {\n  /* Styles applied to the shadow textarea element. */\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nvar TextareaAutosize = React.forwardRef(function TextareaAutosize(props, ref) {\n  var onChange = props.onChange,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      _props$rowsMin = props.rowsMin,\n      rowsMinProp = _props$rowsMin === void 0 ? 1 : _props$rowsMin,\n      style = props.style,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"onChange\", \"rows\", \"rowsMax\", \"rowsMin\", \"style\", \"value\"]);\n\n  var rowsMin = rows || rowsMinProp;\n\n  var _React$useRef = React.useRef(value != null),\n      isControlled = _React$useRef.current;\n\n  var inputRef = React.useRef(null);\n  var handleRef = useForkRef(ref, inputRef);\n  var shadowRef = React.useRef(null);\n  var renders = React.useRef(0);\n\n  var _React$useState = React.useState({}),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var syncHeight = React.useCallback(function () {\n    var input = inputRef.current;\n    var computedStyle = window.getComputedStyle(input);\n    var inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    var boxSizing = computedStyle['box-sizing'];\n    var padding = getStyleValue(computedStyle, 'padding-bottom') + getStyleValue(computedStyle, 'padding-top');\n    var border = getStyleValue(computedStyle, 'border-bottom-width') + getStyleValue(computedStyle, 'border-top-width'); // The height of the inner content\n\n    var innerHeight = inputShallow.scrollHeight - padding; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    var singleRowHeight = inputShallow.scrollHeight - padding; // The height of the outer content\n\n    var outerHeight = innerHeight;\n\n    if (rowsMin) {\n      outerHeight = Math.max(Number(rowsMin) * singleRowHeight, outerHeight);\n    }\n\n    if (rowsMax) {\n      outerHeight = Math.min(Number(rowsMax) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    var outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    var overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    setState(function (prevState) {\n      // Need a large enough difference to update the height.\n      // This prevents infinite rendering loop.\n      if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n        renders.current += 1;\n        return {\n          overflow: overflow,\n          outerHeightStyle: outerHeightStyle\n        };\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (renders.current === 20) {\n          console.error(['Material-UI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n        }\n      }\n\n      return prevState;\n    });\n  }, [rowsMax, rowsMin, props.placeholder]);\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      renders.current = 0;\n      syncHeight();\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [syncHeight]);\n  useEnhancedEffect(function () {\n    syncHeight();\n  });\n  React.useEffect(function () {\n    renders.current = 0;\n  }, [value]);\n\n  var handleChange = function handleChange(event) {\n    renders.current = 0;\n\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", _extends({\n    value: value,\n    onChange: handleChange,\n    ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n    ,\n    rows: rowsMin,\n    style: _extends({\n      height: state.outerHeightStyle,\n      // Need a large enough difference to allow scrolling.\n      // This prevents infinite rendering loop.\n      overflow: state.overflow ? 'hidden' : null\n    }, style)\n  }, other)), /*#__PURE__*/React.createElement(\"textarea\", {\n    \"aria-hidden\": true,\n    className: props.className,\n    readOnly: true,\n    ref: shadowRef,\n    tabIndex: -1,\n    style: _extends(_extends({}, styles.shadow), style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Use `rowsMin` instead. The prop will be removed in v5.\n   *\n   * @deprecated\n   */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Maximum number of rows to display.\n   */\n  rowsMax: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  rowsMin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// Corresponds to 10 frames at 60 Hz.\n// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\nexport default function debounce(func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 166;\n  var timeout;\n\n  function debounced() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line consistent-this\n    var that = this;\n\n    var later = function later() {\n      func.apply(that, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}"],"sourceRoot":""}