{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","component/blockComponent/Hash/hash.module.css","../node_modules/semantic-ui-react/dist/es/addons/TextArea/TextArea.js","component/blockComponent/Hash/Hash.js"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","cx","useKeyOnly","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","module","exports","TextArea","_Component","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","_defineProperty","_assertThisInitialized","createRef","ref","current","focus","e","value","_get","_invoke","_objectSpread","_inherits","_createClass","key","_this$props","rows","Ref","innerRef","onChange","handleChange","onInput","handleInput","Component","as","Hash","useState","textValue","updateTextValue","sha256","toString","hashValue","updateHash","Styles","Heading","Card","Root","centered","CardContent","Content","DataContainer","htmlFor","Label","id","target","Input","label","placeholder","HashArea","disabled","size"],"mappings":"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","file":"static/js/8.ec55b11f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"hash_Container__2tN5Q\",\"Heading\":\"hash_Heading__3HkwO\",\"Root\":\"hash_Root__1hdP5\",\"Content\":\"hash_Content__AWYKX\",\"DataContainer\":\"hash_DataContainer__3WISf\",\"TextArea\":\"hash_TextArea__2yrBA\",\"HashArea\":\"hash_HashArea__25l5q\",\"Label\":\"hash_Label__2TQFf\"};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _get from \"lodash/get\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * A TextArea can be used to allow for extended user input.\n * @see Form\n */\n\nvar TextArea =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextArea, _Component);\n\n  function TextArea() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TextArea)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _this.ref.current.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onChange', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInput\", function (e) {\n      var value = _get(e, 'target.value');\n\n      _invoke(_this.props, 'onInput', e, _objectSpread({}, _this.props, {\n        value: value\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          rows = _this$props.rows,\n          value = _this$props.value;\n      var rest = getUnhandledProps(TextArea, this.props);\n      var ElementType = getElementType(TextArea, this.props);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        onChange: this.handleChange,\n        onInput: this.handleInput,\n        rows: rows,\n        value: value\n      })));\n    }\n  }]);\n\n  return TextArea;\n}(Component);\n\n_defineProperty(TextArea, \"defaultProps\", {\n  as: 'textarea',\n  rows: 3\n});\n\n_defineProperty(TextArea, \"handledProps\", [\"as\", \"onChange\", \"onInput\", \"rows\", \"value\"]);\n\nTextArea.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /**\n   * Called on change.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Called on input.\n   * @param {SyntheticEvent} event - The React SyntheticEvent object\n   * @param {object} data - All props and the event value.\n   */\n  onInput: PropTypes.func,\n\n  /** Indicates row count for a TextArea. */\n  rows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** The value of the textarea. */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default TextArea;","import React, { useState } from 'react';\nimport {\n  Container,\n  Card,\n  CardContent,\n  TextArea,\n  Input,\n} from 'semantic-ui-react';\n\nimport sha256 from 'crypto-js/sha256';\nimport Styles from './hash.module.css';\n\nfunction Hash() {\n  const [textValue, updateTextValue] = useState('');\n  const [hashValue, updateHash] = useState(sha256('').toString());\n\n  function updateTextAndHashValue(e) {\n    updateTextValue(e.target.value);\n    updateHash(sha256(e.target.value).toString());\n  }\n\n  return (\n    <Container>\n      <h1 className={Styles.Heading}>Hash:-</h1>\n      <Card className={Styles.Root} centered>\n        <CardContent className={Styles.Content}>\n          <div className={Styles.DataContainer}>\n            <label htmlFor='textArea' className={Styles.Label}>\n              Data:\n            </label>\n            <TextArea\n              id='textArea'\n              value={textValue}\n              className={Styles.TextArea}\n              onChange={updateTextAndHashValue}\n              rows={7}\n            />\n          </div>\n          <div className={Styles.DataContainer}>\n            <Input\n              label={'Hash'}\n              placeholder='placeholder'\n              className={Styles.HashArea}\n              disabled\n              size='large'\n              value={hashValue}\n            />\n          </div>\n        </CardContent>\n      </Card>\n    </Container>\n  );\n}\n\nexport default Hash;\n"],"sourceRoot":""}